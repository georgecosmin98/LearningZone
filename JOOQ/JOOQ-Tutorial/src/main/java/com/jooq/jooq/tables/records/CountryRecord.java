/*
 * This file is generated by jOOQ.
 */
package com.jooq.jooq.tables.records;


import com.jooq.jooq.tables.Country;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountryRecord extends UpdatableRecordImpl<CountryRecord> implements Record4<Integer, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq_tutorial.country.Pk_Country_Id</code>.
     */
    public CountryRecord setPkCountryId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jooq_tutorial.country.Pk_Country_Id</code>.
     */
    public Integer getPkCountryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jooq_tutorial.country.Name</code>.
     */
    public CountryRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jooq_tutorial.country.Name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jooq_tutorial.country.Officiallang</code>.
     */
    public CountryRecord setOfficiallang(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jooq_tutorial.country.Officiallang</code>.
     */
    public String getOfficiallang() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jooq_tutorial.country.Size</code>.
     */
    public CountryRecord setSize(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jooq_tutorial.country.Size</code>.
     */
    public Integer getSize() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Country.COUNTRY.PK_COUNTRY_ID;
    }

    @Override
    public Field<String> field2() {
        return Country.COUNTRY.NAME;
    }

    @Override
    public Field<String> field3() {
        return Country.COUNTRY.OFFICIALLANG;
    }

    @Override
    public Field<Integer> field4() {
        return Country.COUNTRY.SIZE;
    }

    @Override
    public Integer component1() {
        return getPkCountryId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getOfficiallang();
    }

    @Override
    public Integer component4() {
        return getSize();
    }

    @Override
    public Integer value1() {
        return getPkCountryId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getOfficiallang();
    }

    @Override
    public Integer value4() {
        return getSize();
    }

    @Override
    public CountryRecord value1(Integer value) {
        setPkCountryId(value);
        return this;
    }

    @Override
    public CountryRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CountryRecord value3(String value) {
        setOfficiallang(value);
        return this;
    }

    @Override
    public CountryRecord value4(Integer value) {
        setSize(value);
        return this;
    }

    @Override
    public CountryRecord values(Integer value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CountryRecord
     */
    public CountryRecord() {
        super(Country.COUNTRY);
    }

    /**
     * Create a detached, initialised CountryRecord
     */
    public CountryRecord(Integer pkCountryId, String name, String officiallang, Integer size) {
        super(Country.COUNTRY);

        setPkCountryId(pkCountryId);
        setName(name);
        setOfficiallang(officiallang);
        setSize(size);
    }

    /**
     * Create a detached, initialised CountryRecord
     */
    public CountryRecord(com.jooq.jooq.tables.pojos.Country value) {
        super(Country.COUNTRY);

        if (value != null) {
            setPkCountryId(value.getPkCountryId());
            setName(value.getName());
            setOfficiallang(value.getOfficiallang());
            setSize(value.getSize());
        }
    }
}
